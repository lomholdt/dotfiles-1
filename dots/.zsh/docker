#!/bin/bash

# ===============================================================================================
# Docker functions
# ===============================================================================================

function dcstop-all() {
  docker stop $(docker ps -a -q)
}

function dc-restart() {
  dc stop && dc up
}

function dcbash(){
  if [[ $1 =~ '^[0-9]+$' ]]; then
    CONTAINER=$(docker ps | grep $1)
  else
    CONTAINER=$(docker-compose ps | grep foreman)
  fi

  if [[ $CONTAINER ]]; then
    docker exec -it $(echo $CONTAINER | perl -lne 'print $& if /^[^\s]+/') bash
  else
    echo "Container not found"
  fi
}

export SS_DB_BACKUPS=/Users/codycallahan/Documents/shortstack_apps/db_backups/
function dbbackup(){
  dbmgr backup shortstack_development -d mysql -P 3306 -h 0.0.0.0 -p ~/Documents/shortstack_apps/db_backups
}

function dbrestore() {
  dbmgr restore shortstack_development -d mysql -P 3306 -h 0.0.0.0 -p ~/Documents/shortstack_apps/db_backups
}


#
# Back up and restore database
#

# function dbbackup(){
#   if [[ $1 != "h" ]]; then
#     echo "Backing up shortstack_development..."
#     DATE=`date +%s`
#     if [ -z $1 ]; then
#       FILENAME="shortstack_development_$(echo $DATE).sql"
#     else
#       FILENAME=$1
#     fi
#     mysqldump -uroot -h 127.0.0.1 -P 3306 shortstack_development > $SS_DB_BACKUPS$FILENAME
#     echo "Backup stored in $(echo $SS_DB_BACKUPS$FILENAME)"
#   else
#     echo "Usage: "
#     echo "  # Restore db with timestamped name"
#     echo "  dbbackup"
#     echo ""
#     echo "  # Restore db with custom name"
#     echo "  dbbackup my-db-backup.sql"
#   fi
# }

# function dbrestore(){
#   if ! [ -z $1 ] && [[ $1 != "h" ]]; then
#     echo "Recreate databases if they don't exist..."
#     mysql -uroot -h 127.0.0.1 --port 3306 -e "create database shortstack_development;"
#     mysql -uroot -h 127.0.0.1 --port 3306 -e "create database shortstack_test;"

#     BACKUP=$SS_DB_BACKUPS
#     if [[ $1 =~ '^[0-9]+$' ]]; then
#       BACKUP="$(echo $BACKUP)shortstack_development_$(echo $1).sql"
#     elif [[ $1 == "latest" ]]; then
#       BACKUP="$(ls -t $(echo $SS_DB_BACKUPS)shortstack_development_*.sql | head -1)"
#     else
#       BACKUP=$BACKUP$1
#     fi

#     echo $BACKUP
#     if [ -f $BACKUP ]; then
#       mysql -uroot shortstack_development -h 127.0.0.1 --port 3306 < $BACKUP
#     else
#       echo "Restore failed: backup not found"
#     fi

#   else
#     echo "Usage: "
#     echo "  # Restore backup by timestamp"
#     echo "  dbrestore 1463072909"
#     echo ""
#     echo "  # Restore most recent backup (by timestamp)"
#     echo "  dbrestore latest"
#     echo ""
#     echo "  # Restore backup by name"
#     echo "  dbrestore my_db_backup"
#   fi
# }


# function dbdevrestore(){
#   if ! [ -z $1 ] && [[ $1 != "h" ]]; then
#     echo "Recreate databases if they don't exist..."
#     mysql -uroot -h 0.0.0.0 --port 3306 -e "create database shortstack_development;"
#     mysql -uroot -h 0.0.0.0 --port 3306 -e "create database shortstack_test;"

#     BACKUP=$SS_DB_BACKUPS
#     if [[ $1 =~ '^[0-9]+$' ]]; then
#       BACKUP="$(echo $BACKUP)shortstack_development_$(echo $1).sql"
#     elif [[ $1 == "latest" ]]; then
#       BACKUP="$(ls $(echo $SS_DB_BACKUPS)shortstack_development_*.sql | head -1)"
#     else
#       BACKUP=$BACKUP$1
#     fi

#     echo $BACKUP
#     if [ -f $BACKUP ]; then
#       mysql -uroot shortstack_development -h 0.0.0.0 --port 3306 < $BACKUP
#     else
#       echo "Restore failed: backup not found"
#     fi

#   else
#     echo "Usage: "
#     echo "  # Restore backup by timestamp"
#     echo "  dbrestore 1463072909"
#     echo ""
#     echo "  # Restore most recent backup (by timestamp)"
#     echo "  dbrestore latest"
#     echo ""
#     echo "  # Restore backup by name"
#     echo "  dbrestore my_db_backup"
#   fi
# }
